//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "task_dependencies")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub pipeline_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub source_task_definition_id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub source_output_name: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub target_task_definition_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub target_input_name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::task_definitions::Entity",
        from = "Column::SourceTaskDefinitionId",
        to = "super::task_definitions::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TaskDefinitions2,
    #[sea_orm(
        belongs_to = "super::task_definitions::Entity",
        from = "Column::TargetTaskDefinitionId",
        to = "super::task_definitions::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TaskDefinitions1,
}

impl ActiveModelBehavior for ActiveModel {}
